using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using Component.TheHunters;
using Component.TheHunters.Enumerations;
using Component.TheHunters.IO;
using Component.TheHunters.Models.Charts;

namespace JsonWriterConsole.Creators
{
    /// <summary>
    /// <see cref="IConfigFileCreator"/>
    /// <para>This class creates configuration files for ship lists.</para>
    /// </summary>
    internal class ShipListCreator : IConfigFileCreator
    {
        /// <summary>
        /// <see cref="IConfigFileCreator.WriteData(string)"/>
        /// </summary>
        public void WriteData(string configFileFolder)
        {
            var data = BuildData();
            WriteShipListsToJson(configFileFolder, data);
        }

        #region METHODS
        private static void WriteShipListsToJson(string configFileFolder, IDictionary<string, IList<Ship>> data)
        {
            foreach (var shipList in data)
            {
                using var fileStream = new FileStream(Path.Combine(configFileFolder, shipList.Key + ".json"), FileMode.Create);
                using var utf8JsonWriter = new Utf8JsonWriter(fileStream);
                JsonSerializer.Serialize<IList<Ship>>(utf8JsonWriter, shipList.Value);
            }
        }

        private static IDictionary<string, IList<Ship>> BuildData()
        {
            var shipLists = new Dictionary<string, IList<Ship>>
            {
                ["CapitalShips"] = CapitalShips(),
                ["Tankers"] = Tankers(),
                ["NorthAmerica.Tankers"] = NorthAmericaTankers(),
                ["SmallFreighters"] = SmallFreighters(),
                ["Optional.SmallFreighters"] = OptionalSmallFreighters(),
                ["NorthAmerica.SmallFreighters"] = NorthAmericaSmallFreighters(),
                ["LargeFreighters"] = LargeFreighters(),
                ["Optional.LargeFreighters"] = OptionalLargeFreighters(),
                ["NorthAmerica.LargeFreighters"] = NorthAmericaFreighters()
            };
            return shipLists;
        }
        private static IList<Ship> NorthAmericaFreighters()
        {
            return new List<Ship>()
            {
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8000, "Lady Hawkins") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8000, "Venore") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5700, "West lvis") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5400, "Friar Rock") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 9600, "Gandia") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8000, "TacomaStar") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 15400, "Amerikaland") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7000, "Lihue") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7900, "Arabutan") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5200, "Caryu") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8300, "City of New York") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 11000, "Hertford") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5400, "Nicoya") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7500, "Greylock") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7000, "Kronprinsen") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7100, "Qu'Appelle") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6200, "Peisander") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 9000, "Westmoreland") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6800, "Alcoa Puritan") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7200, "George Calvert") }
            };
        }

        private static IList<Ship> OptionalLargeFreighters()
        {
            return new List<Ship>()
            {
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7300, "EI Oso") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6600, "Clan MacPhee") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5700, "Venetia") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7000, "Empire Dew") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 10500, "Danmark") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5800, "Empire Merlin") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5200, "Hylton") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5400, "St. Lindsay") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 9500, "lnverdarge") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 15400, "Volendam") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6700, "Koranton") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5400, "Auditor") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7800, "Caroni River") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5100, "Empire Adventure") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 10000, "Beaverdale") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5100, "Botwey") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5100, "Keramiai") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5400, "Samala") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5100, "Welcombe") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6900, "Shahristan") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5400, "Chagres") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5800, "Empire Ocelot") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6600, "Saleier") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6300, "Sauger") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5200, "Tiberton") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5900, "Benlawers") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8600, "Empire Endurance") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 10300, "Otaio") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7400, "Pyrrhus") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8400, "Port Gisborne") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5500, "Surat") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5600, "Empire Springbuck") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6700, "Pacific Reliance") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6900, "Pacific Ranger") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5700, "Eastern Star") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5200, "Muneric") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6200, "Eulota") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6000, "Shirac") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8300, "Piako") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5500, "Empire Crossbill") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5100, "Erik Frisell") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8200, "Caprella") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6000, "Cockaponset") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5300, "Evros") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5800, "Orangemoor") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5500, "Lochlomond") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5400, "Rothermere") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6000, "Empire Heron") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5800, "Mount Nymettus") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5900, "Planter") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6600, "Berhala") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7000, "Peru") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 13200, "Wellington Star") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5500, "Lady Glanely") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7400, "Helenus") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5300, "Hellen") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5800, "Bamoralwood") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5300, "Empire Statesman") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6300, "Tabaristan") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5300, "Star of Luxor") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5400, "Windsorwood") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 9500, "Calabria") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7300, "Empire Storm") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6600, "Empire Surf") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 13400, "Avelona Star") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6600, "Alnmoor") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6400, "Silveryew") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5400, "Harmatris") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 15500, "Arandora Star") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8500, "Siamese Prince") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6000, "Rinda") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5900, "Caledonian Monarch") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5800, "Humber Arm") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5700, "Empire Blanda") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5100, "Gand") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5600, "Empire Wildebeeste") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8700, "Manipur") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5500, "Sirikishna") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5800, "City of Shanghai") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7000, "Empire Hall") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 9300, "Accra") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6500, "Effna") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5200, "Harpagus") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5900, "Benmohr") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5300, "Sambre") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6000, "Pacific") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7600, "Michael E.") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7000, "Baluchistan") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 13200, "Auckland Star") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8000, "Nardana") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5300, "Trecarrell") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5600, "Thursobank") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6300, "Jersey City") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6000, "Tielbank") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6400, "Silverpalm") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5100, "lnduna") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7200, "Geraldine Mary") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7400, "J.B. White") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5600, "Phidias") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5500, "Harpalion") }
            };
        }

        private static IList<Ship> LargeFreighters()
        {
            return new List<Ship>()
            {
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 12300, "Sultan Star") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7500, "Moh. Ali-Kebir") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7600, "Kingston Hili") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6200, "Fairport") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5300, "SS Browning") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7500, "Ville de Mons") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 11000, "Norfolk") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5600, "Seattle Spirit") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7200, "Manaar") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 9000, "Titan") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5300, "Brockley Hili") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8400, "Port Nicholson") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5200, "Fanad Head") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5200, "Neptunian") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6300, "Grayburn") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7100, "Santore") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5500, "Kennebec") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5200, "Jose de Larrinaga") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6000, "Anselm") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5900, "Cherokee") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7000, "Louisiane") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 11100, "City of Benares") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 11300, "Abosso") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5500, "West Notus") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 9200, "Lochavon") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6900, "Corrientes") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5400, "Harlingen") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6300, "Polyphemus") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 10000, "Bretagne") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 9300, "Hurunui") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7500, "Empire Hudson") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6800, "Berganger") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5200, "Vermont") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 42300, "Empress of Britain") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7500, "Empire Wave") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6000, "Raphael Semmes") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7200, "City of Mandalay") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5400, "Balzac") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 9500, "Vancouver Island") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5900, "City of Birmingham") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 10000, "Yorkshire") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5400, "Matina") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6700, "Treverbyn") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6800, "Moldanger") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7200, "Clan Chisholm") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 18700, "Laurentic") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5100, "King Malcolm") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8600, "Surrey") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8000, "Malabar") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7500, "Ville d' Arlon") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8500, "Nottingham") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5900, "Port Montreal") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5300, "Bronte") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 10900, "Rotorua") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5300, "Silverbelle") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8400, "Santa Rita") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 9900, "Beaverburn") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 10100, "Napier Star") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6300, "Sagadahoc") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7200, "Alexander Macomb") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7000, "Rothesay Castle") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6000, "Empire Thunder") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5600, "Thornliebank") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8300, "Chilore") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6300, "Gustaf E. Reuter") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 10600, "Zealandic") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 14600, "Ulysses") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7200, "William C Bryant") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8800, "Navasota") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7500, "Ville d' Liege") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 12000, "Uangibbey Castle") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8100, "Umtata") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6700, "Brandon") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5400, "Athenic") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5200, "Buarque") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7200, "Thomas McKean") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8200, "Tajandoen") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 10300, "Calchas") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7000, "Empire Howard") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5200, "Robert E. Lee") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5100, "Royston Grange") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 10100, "Beacon Grange") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6900, "Empire Comet") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6400, "Triglav") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5200, "Cedarbank") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8900, "PortHardy") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 10000, "Jagersfontein") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6400, "Peiping") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 9600, "Protesilaus") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 10300, "lxion") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 6700, "Parnahyba") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7500, "Empire Tide") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 10500, "Brazza") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5900, "Gregalia") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5700, "Steel Engineer") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 7200, "William Hooper") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5200, "Clearton") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 11800, "Rodney Star") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 8000, "Scottsburg") },
                { ShipFactory.CreateShip(ShipType.LARGE_FREIGHTER, 5500, "River Afton") }
            };
        }

        private static IList<Ship> NorthAmericaSmallFreighters()
        {
            return new List<Ship>()
            {
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3800, "Ciltvaira") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2300, "Norvana") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1600, "Frisco") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2600, "Frances Salman") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Ocean Venture") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2400, "Orangestad") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1100, "Acacia") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1900, "Tolten") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3400, "Esparta") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4900, "Christina Knudsen") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1000, "Cythera") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4800, "Reinheit") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1300, "Taborfjell") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3500, "Delisle") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4700, "Leto") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2100, "Skotttand") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3300, "Plow City") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4500, "Margot") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4500, "Zurichmoor") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2700, "Norlindo") }
            };
        }

        private static IList<Ship> OptionalSmallFreighters()
        {
            return new List<Ship>()
            {
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3800, "Alsacien") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Confield") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4200, "Homelea") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1300, "Lapland") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1300, "Quiberon") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3700, "Carsbreck") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4900, "Hindpool") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3100, "Belgravian") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1300, "Miranda") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4900, "Fiscus") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4000, "Jhelum") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3300, "Aguila") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1600, "Gothia") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4200, "Blairspey") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4400, "Medjerda") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Embassage") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Vaclite") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3400, "Canford Chine") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4300, "Eastlea") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4700, "Tremoda") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4300, "Munster") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4600, "Kayeson") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3800, "Umona") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4900, "Berury") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4900, "Maryland") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4500, "Ruperra") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4300, "Alderpool") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4400, "Jedmoor") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4800, "Tara") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Uganda") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3300, "Helena Margareta") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4900, "Lafian") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4500, "Stancliffe") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Whitford Point") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2600, "Henri Mory") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "John Holt") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4900, "Swalnby") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3100, "Fabian") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4300, "WrayCastte") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3900, "Gypsum Queen") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3600, "Polycarp") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4600, "Justitia") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Queen Maud") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3100, "Baron Kelvin") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3900, "Aytesbury") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1900, "lreneMaria") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4300, "Oakdene") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3300, "Rose Schiaffino") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4600, "Pearlmoor") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4900, "St. Elwyn") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1500, "Samso") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Bradford City") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4600, "Gogovate") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1600, "Palmella") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4400, "Vulcain") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3900, "larpoot") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Llanfair") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2800, "Kavak") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4800, "Eibergen") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2000, "Flynderborg") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2300, "Betty") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2500, "Jeanne M.") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3200, "Baron Nairn") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4600, "Gretavate") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4300, "MillHIII") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4700, "Victoria City") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2900, "Robert Hughes") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4000, "Fjord") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2500, "HarZion") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3400, "Maplecourt") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4900, "Elmdene") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4300, "Grethead") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4600, "Bibury") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2700, "Dione II") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4800, "Yselhaven") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3100, "Shuntien") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2500, "Albionic") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2000, "Estrellano") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1500, "Havtor") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2900, "Ruckinge") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4400, "Blairangus") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4300, "Nailsea Lass") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2300, "Arakaka") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4000, "Traveller") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4300, "Alexandras") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4300, "Waynegate") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3100, "Ellinico") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4100, "Rio Blanco") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2500, "Heminge") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3800, "Cape Nelson") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2500, "Toronto City") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3800, "Modesta") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4100, "Darcoila") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3400, "Unaria") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4900, "lnverness") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2300, "Fred W. Green") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4900, "Ashantian") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Jonathan Holt") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3400, "Holmside") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2600, "Montenol") }
            };
        }

        private static IList<Ship> SmallFreighters()
        {
            return new List<Ship>()
            {
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1800, "Bosnia") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3600, "Aenos") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3500, "Baron Pentland") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2600, "City of Oxford") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4100, "RioClaro") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3100, "Clintonia") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2000, "Scania") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2600, "Thurso") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1800, "Gartavon") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4700, "Stratford") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4700, "Tuva") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4400, "Frederika Lensen") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4800, "Royal Sceptre") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2700, "Vingaland") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3200, "Hatasu") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2100, "Bluefields") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4500, "Blairlogie") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3700, "Kyleglen") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Lehigh") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4800, "Navarino") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4900, "Firby") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4800, "Bassano") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4900, "Ashby") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1100, "Viking") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4000, "Aviemore") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4900, "Thirlby") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Empire Barracuda") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Broompark") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Kafirlstan") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2000, "Daphne") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4800, "Cassequel") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4400, "Condylis") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1000, "Truro") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2700, "Tweed") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3300, "Annavore") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3300, "Balladier") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2700, "Akenside") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Esmond") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3000, "Thorstrand") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1600, "Trolla") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Stonepool") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2600, "Bengore Head") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3000, "Culebra") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4600, "Shaftesbury") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Winkleigh") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4700, "Starcross") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4100, "Olinda") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3300, "Arlyn") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2500, "Stanholme") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Alfred Jones") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3100, "Ontario") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4700, "Aeas") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Arlington Court") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Pandias") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2400, "Torny") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2200, "Caribou") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Sliedrecht") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4000, "RioAzul") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Ogontz") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4700, "Woensdrecht") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Counsellor") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3000, "Robert L Holt") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Carabulle") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1200, "Antonico") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Sheaf Mead") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4400, "Soloy") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Goncalves Dias") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4400, "Bancrest") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2100, "Merisaar") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4800, "Vigrid") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4600, "Willimantic") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4200, "Marcrest") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4000, "Stakesby") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Kinross") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3500, "Denmark") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4800, "Daydawn") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4200, "Gro") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4400, "Nicolas Pateras") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4500, "Pontypridd") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4100, "Dayrose") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2400, "Mardinian") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1300, "Erato") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1300, "Anna") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4600, "Dalcroy") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3700, "Baron Blythswod") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Kumasian") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4900, "RioTercero") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2000, "SeaGlory") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3700, "Graigwen") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4500, "Cape Rodney") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4600, "Leonidas M.") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2300, "Sea Venture") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1800, "Trevisa") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 1200, "Clantara") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Nordal") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3700, "Baron Dechmont") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 3800, "Scoresby") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 2100, "Spind") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 5000, "Manuela") },
                { ShipFactory.CreateShip(ShipType.SMALL_FREIGHTER, 4800, "Reedpool") }
            };
        }

        private static IList<Ship> NorthAmericaTankers()
        {
            return new List<Ship>()
            {
                { ShipFactory.CreateShip(ShipType.TANKER, 9100, "Norness") },
                { ShipFactory.CreateShip(ShipType.TANKER, 6800, "Coimbra") },
                { ShipFactory.CreateShip(ShipType.TANKER, 6600, "Allan Jackson") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8200, "Malay") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8100, "Empire Gern") },
                { ShipFactory.CreateShip(ShipType.TANKER, 9100, "Diala") },
                { ShipFactory.CreateShip(ShipType.TANKER, 9300, "Varanger") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7100, "Francis E. Powell") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7000, "Halo") },
                { ShipFactory.CreateShip(ShipType.TANKER, 11300, "Montrolite") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8300, "lndia Arrow") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8400, "ChinaArrow") },
                { ShipFactory.CreateShip(ShipType.TANKER, 6200, "W.L. Steed") },
                { ShipFactory.CreateShip(ShipType.TANKER, 5300, "Republic") },
                { ShipFactory.CreateShip(ShipType.TANKER, 10200, "W.D. Anderson") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8200, "Pan Massachusetts") },
                { ShipFactory.CreateShip(ShipType.TANKER, 11000, "O.A. Knudsen") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8000, "Esso Nashville") },
                { ShipFactory.CreateShip(ShipType.TANKER, 11400, "Atlantic Sun") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8000, "DixieArrow") }
            };
        }

        private static IList<Ship> Tankers()
        {
            return new List<Ship>()
            {
                { ShipFactory.CreateShip(ShipType.TANKER, 9400, "lnverliffey") },
                { ShipFactory.CreateShip(ShipType.TANKER, 6700, "La Brea") },
                { ShipFactory.CreateShip(ShipType.TANKER, 12000, "Cadillac") },
                { ShipFactory.CreateShip(ShipType.TANKER, 6200, "Ensis") },
                { ShipFactory.CreateShip(ShipType.TANKER, 10000, "Regent Tiger") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7500, "Pecten") },
                { ShipFactory.CreateShip(ShipType.TANKER, 6600, "Athelbeach") },
                { ShipFactory.CreateShip(ShipType.TANKER, 9500, "Kongsgaard") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8500, "British lnfluence") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8400, "British Farne") },
                { ShipFactory.CreateShip(ShipType.TANKER, 6200, "Erodona") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8800, "Maasdam") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8800, "Cheyenne") },
                { ShipFactory.CreateShip(ShipType.TANKER, 5800, "Sarita") },
                { ShipFactory.CreateShip(ShipType.TANKER, 9300, "Franche Comte") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8700, "Malayall") },
                { ShipFactory.CreateShip(ShipType.TANKER, 14000, "Emile-Miguet") },
                { ShipFactory.CreateShip(ShipType.TANKER, 9200, "lnvershannon") },
                { ShipFactory.CreateShip(ShipType.TANKER, 6600, "Fern") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8000, "Anadara") },
                { ShipFactory.CreateShip(ShipType.TANKER, 11000, "Arne Kjode") },
                { ShipFactory.CreateShip(ShipType.TANKER, 10000, "Torinia") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8100, "Beduin") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7500, "Bulysses") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7400, "San Alberto") },
                { ShipFactory.CreateShip(ShipType.TANKER, 10000, "Frederick S. Fales") },
                { ShipFactory.CreateShip(ShipType.TANKER, 5700, "Venetia") },
                { ShipFactory.CreateShip(ShipType.TANKER, 6500, "Tahchee") },
                { ShipFactory.CreateShip(ShipType.TANKER, 5000, "Vaclite") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7000, "British General") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8700, "Gastor") },
                { ShipFactory.CreateShip(ShipType.TANKER, 12800, "San Florentino") },
                { ShipFactory.CreateShip(ShipType.TANKER, 5200, "Chastine Maersk") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7000, "Nina Borthen") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7000, "British Reliance") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8200, "T.J. Williams") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8000, "Ceronia") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7100, "Davanger") },
                { ShipFactory.CreateShip(ShipType.TANKER, 6900, "British Viscount") },
                { ShipFactory.CreateShip(ShipType.TANKER, 6300, "Barbro") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7800, "Caroni River") },
                { ShipFactory.CreateShip(ShipType.TANKER, 9500, "Languedoc") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8000, "Chama") },
                { ShipFactory.CreateShip(ShipType.TANKER, 15000, "Svend Foyn") },
                { ShipFactory.CreateShip(ShipType.TANKER, 9000, "Den Haag") },
                { ShipFactory.CreateShip(ShipType.TANKER, 13900, "New Sevilla") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8100, "Conus") },
                { ShipFactory.CreateShip(ShipType.TANKER, 9600, "W.C. Teagle") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8000, "Imperial Transport") },
                { ShipFactory.CreateShip(ShipType.TANKER, 5400, "Casanare") },
                { ShipFactory.CreateShip(ShipType.TANKER, 5600, "Lincoln Ellsworth") },
                { ShipFactory.CreateShip(ShipType.TANKER, 6600, "Erviken") },
                { ShipFactory.CreateShip(ShipType.TANKER, 5700, "Daghestan") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7000, "Scottish Maiden") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8500, "Duffield") },
                { ShipFactory.CreateShip(ShipType.TANKER, 9800, "Barfonn") },
                { ShipFactory.CreateShip(ShipType.TANKER, 2600, "Leticia") },
                { ShipFactory.CreateShip(ShipType.TANKER, 5000, "Congonian") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8200, "Capulet") },
                { ShipFactory.CreateShip(ShipType.TANKER, 9000, "Salinas") },
                { ShipFactory.CreateShip(ShipType.TANKER, 13000, "San Fernando") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7600, "Havbor") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8900, "Oitfield") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7000, "T.C.White") },
                { ShipFactory.CreateShip(ShipType.TANKER, 10000, "ltalia") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8800, "Appalachee") },
                { ShipFactory.CreateShip(ShipType.TANKER, 9900, "Caledonia") },
                { ShipFactory.CreateShip(ShipType.TANKER, 9200, "lnverlee") },
                { ShipFactory.CreateShip(ShipType.TANKER, 9000, "Eli Knudsen") },
                { ShipFactory.CreateShip(ShipType.TANKER, 12200, "Victor Ross") },
                { ShipFactory.CreateShip(ShipType.TANKER, 6100, "John P. Pederson") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7500, "Sagona") },
                { ShipFactory.CreateShip(ShipType.TANKER, 12000, "Saranac") },
                { ShipFactory.CreateShip(ShipType.TANKER, 5900, "British Premier") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8500, "British Security") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8100, "Darkdale") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7500, "Moerdrecht") },
                { ShipFactory.CreateShip(ShipType.TANKER, 9000, "Charles Pratt") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8100, "Cairndale") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7000, "British Mariner") },
                { ShipFactory.CreateShip(ShipType.TANKER, 9000, "Athellaird") },
                { ShipFactory.CreateShip(ShipType.TANKER, 10500, "W.B. Walker") },
                { ShipFactory.CreateShip(ShipType.TANKER, 6900, "British Grenadier") },
                { ShipFactory.CreateShip(ShipType.TANKER, 11900, "Astral") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8600, "Yarraville") },
                { ShipFactory.CreateShip(ShipType.TANKER, 10500, "A.F. Corwin") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8800, "Alfred Olsen") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8100, "San Demetrio") },
                { ShipFactory.CreateShip(ShipType.TANKER, 2600, "Lucretia") },
                { ShipFactory.CreateShip(ShipType.TANKER, 10500, "E.R. Brown") },
                { ShipFactory.CreateShip(ShipType.TANKER, 9500, "lnversuir") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7200, "British Resource") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7000, "Scottish Minstrel") },
                { ShipFactory.CreateShip(ShipType.TANKER, 7000, "Scottish Standard") },
                { ShipFactory.CreateShip(ShipType.TANKER, 6000, "Wellfield") },
                { ShipFactory.CreateShip(ShipType.TANKER, 8600, "Winamac") },
                { ShipFactory.CreateShip(ShipType.TANKER, 6800, "Athelcrest") },
                { ShipFactory.CreateShip(ShipType.TANKER, 6900, "British Gunner") },
                { ShipFactory.CreateShip(ShipType.TANKER, 10700, "Pendrecht") },
                { ShipFactory.CreateShip(ShipType.TANKER, 10400, "Narragansett") }
            };
        }

        private static IList<Ship> CapitalShips()
        {
            return new List<Ship>()
            {
                { ShipFactory.CreateShip(ShipType.CAPITAL_SHIP, 22000, "CV Ark Royal") },
                { ShipFactory.CreateShip(ShipType.CAPITAL_SHIP, 29100, "BB Royal Oak") },
                { ShipFactory.CreateShip(ShipType.CAPITAL_SHIP, 18600, "CV Courageous") },
                { ShipFactory.CreateShip(ShipType.CAPITAL_SHIP, 10000, "CA Belfast") },
                { ShipFactory.CreateShip(ShipType.CAPITAL_SHIP, 31100, "BB Barham") },
                { ShipFactory.CreateShip(ShipType.CAPITAL_SHIP, 34000, "BB Nelson") },
                { ShipFactory.CreateShip(ShipType.CAPITAL_SHIP, 31300, "BB Malaya") },
                { ShipFactory.CreateShip(ShipType.CAPITAL_SHIP, 22600, "CV Eagle") },
                { ShipFactory.CreateShip(ShipType.CAPITAL_SHIP, 12800, "CVE Avenger") },
                { ShipFactory.CreateShip(ShipType.CAPITAL_SHIP, 11000, "CVE Audacity") }
            };
        }
        #endregion METHODS
    }
}